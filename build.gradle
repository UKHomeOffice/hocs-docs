plugins {
    id 'org.springframework.boot' version '2.5.1'
    id 'java'
    id 'jacoco'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

group = 'uk.gov.digital.ho.hocs'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

bootRun {
    args = ["--spring.profiles.active=local, development"]
}

plugins.withType(JacocoPlugin) {
    tasks["test"].finalizedBy 'jacocoTestReport'
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = true
        html.required = false
        csv.required = false
        //for XML
        xml.destination file("${buildDir}/reports/jacoco.xml")
    }
}

dependencies {
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.5'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.12.5'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.12.5'

    implementation('org.springframework.boot:spring-boot-starter-web') {
        exclude module: "spring-boot-starter-tomcat"
    }
    implementation('org.springframework.boot:spring-boot-starter-undertow')
    implementation('net.logstash.logback:logstash-logback-encoder:5.3')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.springframework.boot:spring-boot-starter-json')
    implementation('org.springframework.boot:spring-boot-starter-actuator')

    implementation('org.apache.camel:camel-spring-boot:2.24.0')
    implementation('org.apache.camel:camel-jackson:2.24.0')
    implementation('org.apache.camel:camel-aws:2.24.0')
    implementation('org.apache.camel:camel-http4:2.24.0')
    implementation('org.apache.httpcomponents:httpmime:4.5.6')
    implementation('com.amazonaws:aws-java-sdk:1.11.553')
    implementation('org.glassfish:javax.json:1.0.4')

    implementation('org.flywaydb:flyway-core')

    runtimeOnly('org.hsqldb:hsqldb')
    runtimeOnly('org.postgresql:postgresql')

    compileOnly('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')


    testImplementation("com.github.tomakehurst:wiremock-standalone:2.18.0")
    testImplementation('org.apache.camel:camel-test-spring:2.24.0')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('org.assertj:assertj-core')
    testImplementation('com.adobe.testing:s3mock-junit4:2.1.8')
    testImplementation('com.adobe.testing:s3mock:2.1.8')
}

jar {
    enabled = false
}
