
# For the git info plugin - see the /info endpoint provided by spring boot actuator
info.app.name=${name:hocs-document-service}
info.app.fullname=Hocs Document Service
info.app.version=${version:0.0.1}

server.port=8087

spring.datasource.url=jdbc:postgresql://${db.host:localhost}:${db.port:5432}/${db.name:postgres}?currentSchema=${db.schema.name:docs}&user=${db.username:root}&password=${db.password:dev}&stringtype=unspecified

spring.flyway.locations=classpath:/db/migration/postgresql
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

docs.queue.name=cs-dev-document-sqs
docs.queue=seda://${docs.queue.name}
docs.queue.dlq.name=cs-dev-document-sqs-dlq
docs.queue.dlq=seda://${docs.queue.dlq.name}
docs.queue.maximumRedeliveries=2
docs.queue.redeliveryDelay=10000
docs.queue.backOffMultiplier=2


conversionQueueName=direct:convertdocument
malwareQueueName=direct:malwarecheck
uploadDocumentQueueName=direct:uploadtrustedfile
documentServiceQueueName=direct:updaterecord

docs.trustedS3bucketName=cs-dev-trusted-s3
docs.untrustedS3bucketName=cs-dev-untrusted-s3

docs.untrustedS3bucket=${docs.untrustedS3bucketName}
docs.trustedS3bucket=${docs.trustedS3bucketName}

clamav.root=http4://localhost:8086
clamav.path=${clamav.root}/scan

hocsconverter.root=http4://localhost:9091
hocsconverter.path=${hocsconverter.root}/uploadFile

camel.springboot.main-run-controller=true

aws.sqs.region=eu-west-2
aws.account.id=12345
aws.sqs.access.key=12345
aws.sqs.secret.key=12345